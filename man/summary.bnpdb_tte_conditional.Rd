% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tte_print_and_summarize.R
\name{summary.bnpdb_tte_conditional}
\alias{summary.bnpdb_tte_conditional}
\title{Summarize a bnpdb time-to-event regression model with conditional parameters}
\usage{
\method{summary}{bnpdb_tte_conditional}(object, ...)
}
\arguments{
\item{object}{An object of class \code{bnpdb_tte_conditional} obtained by calling \code{\link{tte_reg_bnp}}}

\item{...}{arguments to pass onto \code{\link[posterior]{summarize_draws}}}
}
\value{
an object of class
}
\description{
Summarize a bnpdb time-to-event regression model with conditional parameters
}
\examples{
## Set seed for reproducibility
set.seed(741)

## Generate current and historical data sets
n     <- 100
n0    <- 100
N     <- n + n0
pexch <- 0.80
beta  <- cbind(c(1, 1, 0), c(-1, -1, 0))
sigma <- c(0.5, 0.75)
a     <- rbinom(N, 1, 0.5)      ## tretment indicator
x     <- rbinom(N, 1, 0.5)      ## binary covariate
eps0  <- rbinom(n0, 1, pexch)   ## exchangeability indicator
eps   <- c(rep(1, n), 2 - eps0) ## 1 = exch; 2 = unexch
X     <- cbind(1, a, x)
Mu    <- unlist( 
  lapply(1:N, function(i) { as.numeric(X[i, ] \%*\% beta[, eps[i]] ) } ) 
)
logt     <- rnorm(N, Mu, sigma[eps])
logc     <- rnorm(N, mean(Mu) + 0.50, sd = 0.25)
event    <- logt <= logc
logy     <- ifelse(event, logt, logc)
dat      <- data.frame(y = exp(logy), event = event, a = a, x = x)
curdata  <- dat[1:n, ]
histdata <- dat[-(1:n), ]

## Times for marginalization
tau   = max(curdata$y[curdata$event == 1])
times = seq(0.01, tau, length.out = 5)

## Fit intercept only (no borrowing)
fit.intonly = tte_reg_bnp(
  survival::Surv(y, event) ~ 1, data = curdata, K = 5
  , nburnin = 0, nsamples = 100
)

## Fit treatment only (with borrowing)
fit.strataonly = tte_reg_bnp(
  survival::Surv(y, event) ~ a, data = curdata, K = 5
  , external_data = histdata, K_unexch = 5
  , nburnin = 0, nsamples = 100
)


## Fit treatment and binary covariate (with borrowing)
fit.anova_ddp = tte_reg_bnp(
  survival::Surv(y, event) ~ a + x, data = curdata, K = 5
  , external_data = histdata, K_unexch = 5
  , nburnin = 0, nsamples = 100
)

## Fit models stratified by arm (no borrowing)
fit.stratified = lapply(
  0:1, function(arm) {
    tte_reg_bnp(
      survival::Surv(y, event) ~ x
      , data = curdata[curdata$a == arm, ]
      , external_data = histdata[histdata$a == arm, ]
      , K = 5, K_unexch = 5
      , nburnin = 0, nsamples = 100
    )
  }
)

## Summarize conditional estimates--only reports identifiable quantities
summary(fit.strataonly, mean, sd, ~posterior::quantile2(.x, probs = c(0.025, 0.975)))
summary(fit.anova_ddp)

}
