% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tte_reg_bnp.R
\name{tte_reg_bnp}
\alias{tte_reg_bnp}
\title{Bayesian nonparametric dynamic borrowing for time-to-event regression}
\usage{
tte_reg_bnp(
  formula,
  data,
  K,
  external_data = NULL,
  K_unexch = NULL,
  beta_bm = NULL,
  tau_bm = NULL,
  alpha_prior = dist_truncated(dist_gamma(12, 2), 0, Inf),
  beta_unexch_bm = NULL,
  tau_unexch_bm = NULL,
  alpha_unexch_prior = dist_truncated(dist_gamma(12, 2), 0, Inf),
  pexch_prior = dist_beta(0.5, 0.5),
  inits = list(),
  nburnin = 2000,
  nsamples = 10000,
  thin = 1
)
}
\arguments{
\item{formula}{a  \code{\link[stats]{formula}} giving how the survival time is related to covariates}

\item{data}{a \code{\link[base]{data.frame}} for the current data}

\item{K}{integer with value \eqn{\ge 2} giving truncation point of the stick-breaking representation for the exchangeable population}

\item{external_data}{optional \code{\link[base]{data.frame}} for the external data. If \code{NULL}, a standard DPMM is fit to \code{data}.}

\item{K_unexch}{truncation point of the stick-breaking representation for the nonexchangeable population; required to be an integer \eqn{\ge 2} if \code{external_data} is not \code{NULL}}

\item{beta_bm}{either \code{NULL} or a \code{\link[distributional]{dist_multivariate_normal}} base measure for regression coefficients of the exchangeable population; if \code{NULL}, defaults to a multivariate normal prior with hyperparameters based on the maximum likelihood estimate and inverse information matrix (rescaled to 5 events) using \code{data}.}

\item{tau_bm}{a \code{\link[distributional]{dist_gamma}} base measure on the precision parameter for the exchangeable population; if \code{NULL}, defaults to a gamma prior that most closely approximates the log-normal distribution implied by the maximum likelihood analysis with variance rescaled to 5 events using \code{data}}

\item{alpha_prior}{a \code{\link[distributional]{dist_gamma}} prior or a truncated gamma prior via \code{\link[distributional]{dist_truncated}} for the concentration parameter of the exchangeable DPMM}

\item{beta_unexch_bm}{either \code{NULL} or a \code{\link[distributional]{dist_multivariate_normal}} base measure for regression coefficients of the nonexchangeable population; required if \code{external_data} is not \code{NULL}; if \code{NULL}, defaults to a multivariate normal prior with hyperparameters based on the maximum likelihood estimate and inverse information matrix (rescaled to 5 events) using \code{external_data}}

\item{tau_unexch_bm}{a \code{\link[distributional]{dist_gamma}} base measure for the precision of the nonexchangeable population; required if \code{external_data} is not \code{NULL}; if \code{NULL}, defaults to a gamma prior that most closely approximates the log-normal distribution implied by the maximum likelihood analysis with variance rescaled to 5 events using \code{data}}

\item{alpha_unexch_prior}{a \code{\link[distributional]{dist_gamma}} prior or a truncated gamma prior via \code{\link[distributional]{dist_truncated}} for the concentration parameter of the nonexchangeable DPMM; required if \code{external_data} is not \code{NULL}}

\item{pexch_prior}{a \code{\link[distributional]{dist_beta}} prior for the probability that an external observation is exchangeable; required if \code{external_data} is not \code{NULL}}

\item{inits}{an optional \code{list} containing starting values for any of the following:
\itemize{
\item \code{beta}: \eqn{K \times p} \code{matrix} giving cluster regression coefficients for the exchangeable population; defaults to random draws from a multivariate normal centered at the MLE using \code{data} with covariance equal to the inverse Fisher Information
\item \code{tau}: \eqn{K}-\code{vector} giving cluster precision parameters for the exchangeable population; defaults to random draws from a log-normal centered at the MLE using \code{data} with covariance equal to the inverse Fisher Information
\item \code{alpha}: Dirichlet process concentration parameter for exchangeable population; set to the prior mean implied by \code{alpha_prior}
\item \code{v}: \eqn{(K - 1)}-dimensional vector giving stick-breaking variables for the exchangeable population; defaults to \eqn{(K - 1)} samples from a Beta(1, \code{alpha}) distribution
\item \code{pexch}: probability that a subject in \code{external_data} is exchangeable; defaults to prior mean of \code{pexch_prior}; ignored if \code{external_data} is \code{NULL}
\item \code{eps0}: \eqn{n_0 \times K_unexch} matrix of exchangeability indicators for external data; default value is based on highest likelihood from initial values; ignored if \code{external_data} is \code{NULL}
\item \code{beta_unexch}: \eqn{K_unexch \times p} \code{matrix} giving cluster regression coefficients for unexchangeable population; default behavior is analogous to \code{beta} but using \code{external_data}; ignored if \code{external_data} is \code{NULL}
\item \code{tau_unexch}: \eqn{K_unexch}-\code{vector} giving cluster precision parmaeters for unexchangeable population; default behavior is analogous to \code{tau} but using \code{external_data}; ignored if \code{external_data} is \code{NULL}
\item \code{alpha_unexch}: mean of \code{alpha_unexch_prior}; ignored if \code{external_data} is \code{NULL}
\item \code{v_unexch}: \eqn{(K_{unexch} - 1)}-vector giving stick-breaking variables for unexchangeable population; defaults to samples from Beta(1, alpha_unexch); ignored if \code{external_data} is \code{NULL}
\item \code{z0}: a \eqn{n_0}-\code{vector} consisting of starting values for latent clusters for the external data; default is based on likelihood using initial parameters; ignored if \code{external_data} is \code{NULL}; if \code{eps0 == 1} then \code{z0} should be between \code{1:K} otherwise between \code{1:K_unexch}. Defaults to the maximum log likelihood among the \code{K} clusters using \code{beta_init}, \code{tau_init}, \code{beta_unexch_init}, and \code{tau_unexch_init}. Note: if \code{z0} is specified then \code{eps0} must also be specified.
}}

\item{nburnin}{number of MCMC burn-in samples}

\item{nsamples}{number of desired posterior samples after burn-in (and thinning)}

\item{thin}{thinning parameter for MCMC sampling}
}
\value{
A \code{list} (class \code{"bnpdb_tte_conditional"}) with the following components:
\itemize{
\item \code{beta}: a \eqn{p \times K \times M} \code{array} of regression coefficients for the exchangeable population
\item \code{sigma}: an \eqn{M \times K} \code{matrix} of standard deviations for the exchangeable population
\item \code{alpha}: an \code{M}-dimensional \code{vector} of concentration parameters for the exchangeable DPMM
\item \code{w}: a \eqn{M \times K} \code{matrix} of stick-breaking weights for the exchangeable population
\item \code{pexch}: an \code{M}-dimensional \code{vector} of posterior draws of exchangeability probability; only present if \code{external_data} is not \code{NULL}
\item \code{eps0}: a \eqn{M \times n_0} \code{matrix} of exchangeability indicators for external data; only present if \code{external_data} is not \code{NULL}
}
}
\description{
Samples from the posterior distribution of a Dirichlet process mixture model (DPMM) for time-to-event regression, using a stick-breaking representation.
When \code{external_data} is provided, models the external data using a two-part mixture with exchangeable and nonexchangeable components, enabling dynamic borrowing.
Arguments given as \code{NULL} are optional and will have default behavior specified as below.
}
\examples{
## Set seed for reproducibility
set.seed(741)

## Generate current and historical data sets
n     <- 100
n0    <- 100
N     <- n + n0
pexch <- 0.80
beta  <- cbind(c(1, 1, 0), c(-1, -1, 0))
sigma <- c(0.5, 0.75)
a     <- rbinom(N, 1, 0.5)      ## tretment indicator
x     <- rbinom(N, 1, 0.5)      ## binary covariate
eps0  <- rbinom(n0, 1, pexch)   ## exchangeability indicator
eps   <- c(rep(1, n), 2 - eps0) ## 1 = exch; 2 = unexch
X     <- cbind(1, a, x)
Mu    <- unlist( 
  lapply(1:N, function(i) { as.numeric(X[i, ] \%*\% beta[, eps[i]] ) } ) 
)
logt     <- rnorm(N, Mu, sigma[eps])
logc     <- rnorm(N, mean(Mu) + 0.50, sd = 0.25)
event    <- logt <= logc
logy     <- ifelse(event, logt, logc)
dat      <- data.frame(y = exp(logy), event = event, a = a, x = x)
curdata  <- dat[1:n, ]
histdata <- dat[-(1:n), ]

## Times for marginalization
tau   = max(curdata$y[curdata$event == 1])
times = seq(0.01, tau, length.out = 5)

## Fit intercept only (no borrowing)
fit.intonly = tte_reg_bnp(
  survival::Surv(y, event) ~ 1, data = curdata, K = 5
  , nburnin = 0, nsamples = 100
)

## Fit treatment only (with borrowing)
fit.strataonly = tte_reg_bnp(
  survival::Surv(y, event) ~ a, data = curdata, K = 5
  , external_data = histdata, K_unexch = 5
  , nburnin = 0, nsamples = 100
)


## Fit treatment and binary covariate (with borrowing)
fit.anova_ddp = tte_reg_bnp(
  survival::Surv(y, event) ~ a + x, data = curdata, K = 5
  , external_data = histdata, K_unexch = 5
  , nburnin = 0, nsamples = 100
)

## Fit models stratified by arm (no borrowing)--results in a list.
fit.stratified = lapply(
  0:1, function(arm) {
    tte_reg_bnp(
      survival::Surv(y, event) ~ x
      , data = curdata[curdata$a == arm, ]
      , K = 5, K_unexch = 5
      , nburnin = 0, nsamples = 100
    )
  }
)

## Summarize conditional estimates--only reports identifiable quantities
summary(fit.strataonly, mean, sd, ~posterior::quantile2(.x, probs = c(0.025, 0.975)))
summary(fit.anova_ddp)
lapply(fit.stratified, summary)

}
