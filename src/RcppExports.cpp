// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// tte_reg_bnpdb_cpp
Rcpp::List tte_reg_bnpdb_cpp(Rcpp::List const& data_list, Rcpp::List const& histdata_list, Rcpp::List const& basemeasure_list, Rcpp::List const& inits_list, int const& niter, int const& nburnin, int const& nthin);
RcppExport SEXP _bnpdb_tte_reg_bnpdb_cpp(SEXP data_listSEXP, SEXP histdata_listSEXP, SEXP basemeasure_listSEXP, SEXP inits_listSEXP, SEXP niterSEXP, SEXP nburninSEXP, SEXP nthinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List const& >::type data_list(data_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List const& >::type histdata_list(histdata_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List const& >::type basemeasure_list(basemeasure_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List const& >::type inits_list(inits_listSEXP);
    Rcpp::traits::input_parameter< int const& >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< int const& >::type nburnin(nburninSEXP);
    Rcpp::traits::input_parameter< int const& >::type nthin(nthinSEXP);
    rcpp_result_gen = Rcpp::wrap(tte_reg_bnpdb_cpp(data_list, histdata_list, basemeasure_list, inits_list, niter, nburnin, nthin));
    return rcpp_result_gen;
END_RCPP
}
// tte_reg_dpmm_cpp
Rcpp::List tte_reg_dpmm_cpp(Rcpp::List const& data_list, Rcpp::List const& basemeasure_list, Rcpp::List const& inits_list, int const& niter, int const& nburnin, int const& nthin);
RcppExport SEXP _bnpdb_tte_reg_dpmm_cpp(SEXP data_listSEXP, SEXP basemeasure_listSEXP, SEXP inits_listSEXP, SEXP niterSEXP, SEXP nburninSEXP, SEXP nthinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List const& >::type data_list(data_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List const& >::type basemeasure_list(basemeasure_listSEXP);
    Rcpp::traits::input_parameter< Rcpp::List const& >::type inits_list(inits_listSEXP);
    Rcpp::traits::input_parameter< int const& >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< int const& >::type nburnin(nburninSEXP);
    Rcpp::traits::input_parameter< int const& >::type nthin(nthinSEXP);
    rcpp_result_gen = Rcpp::wrap(tte_reg_dpmm_cpp(data_list, basemeasure_list, inits_list, niter, nburnin, nthin));
    return rcpp_result_gen;
END_RCPP
}
// marginalize_strataonly
Rcpp::List marginalize_strataonly(arma::mat const& X, Rcpp::List const& samples, arma::vec const& log_survival_times, bool log_survival, arma::vec const& log_hazard_times, bool log_hazard, arma::vec const& log_rmst_times, bool log_rmst);
RcppExport SEXP _bnpdb_marginalize_strataonly(SEXP XSEXP, SEXP samplesSEXP, SEXP log_survival_timesSEXP, SEXP log_survivalSEXP, SEXP log_hazard_timesSEXP, SEXP log_hazardSEXP, SEXP log_rmst_timesSEXP, SEXP log_rmstSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat const& >::type X(XSEXP);
    Rcpp::traits::input_parameter< Rcpp::List const& >::type samples(samplesSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type log_survival_times(log_survival_timesSEXP);
    Rcpp::traits::input_parameter< bool >::type log_survival(log_survivalSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type log_hazard_times(log_hazard_timesSEXP);
    Rcpp::traits::input_parameter< bool >::type log_hazard(log_hazardSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type log_rmst_times(log_rmst_timesSEXP);
    Rcpp::traits::input_parameter< bool >::type log_rmst(log_rmstSEXP);
    rcpp_result_gen = Rcpp::wrap(marginalize_strataonly(X, samples, log_survival_times, log_survival, log_hazard_times, log_hazard, log_rmst_times, log_rmst));
    return rcpp_result_gen;
END_RCPP
}
// marginalize_tte_gcomp
Rcpp::List marginalize_tte_gcomp(Rcpp::List const& Xlist, Rcpp::List const& samples_list, arma::vec const& log_survival_times, bool log_survival, arma::vec const& log_hazard_times, bool log_hazard, arma::vec const& log_rmst_times, bool log_rmst);
RcppExport SEXP _bnpdb_marginalize_tte_gcomp(SEXP XlistSEXP, SEXP samples_listSEXP, SEXP log_survival_timesSEXP, SEXP log_survivalSEXP, SEXP log_hazard_timesSEXP, SEXP log_hazardSEXP, SEXP log_rmst_timesSEXP, SEXP log_rmstSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List const& >::type Xlist(XlistSEXP);
    Rcpp::traits::input_parameter< Rcpp::List const& >::type samples_list(samples_listSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type log_survival_times(log_survival_timesSEXP);
    Rcpp::traits::input_parameter< bool >::type log_survival(log_survivalSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type log_hazard_times(log_hazard_timesSEXP);
    Rcpp::traits::input_parameter< bool >::type log_hazard(log_hazardSEXP);
    Rcpp::traits::input_parameter< arma::vec const& >::type log_rmst_times(log_rmst_timesSEXP);
    Rcpp::traits::input_parameter< bool >::type log_rmst(log_rmstSEXP);
    rcpp_result_gen = Rcpp::wrap(marginalize_tte_gcomp(Xlist, samples_list, log_survival_times, log_survival, log_hazard_times, log_hazard, log_rmst_times, log_rmst));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bnpdb_tte_reg_bnpdb_cpp", (DL_FUNC) &_bnpdb_tte_reg_bnpdb_cpp, 7},
    {"_bnpdb_tte_reg_dpmm_cpp", (DL_FUNC) &_bnpdb_tte_reg_dpmm_cpp, 6},
    {"_bnpdb_marginalize_strataonly", (DL_FUNC) &_bnpdb_marginalize_strataonly, 8},
    {"_bnpdb_marginalize_tte_gcomp", (DL_FUNC) &_bnpdb_marginalize_tte_gcomp, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_bnpdb(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
